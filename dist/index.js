// Generated by CoffeeScript 1.9.3
var ChangeLog, semver, xre;

xre = require('xregexp').XRegExp;

semver = require('semver');

ChangeLog = (function() {
  function ChangeLog(blob) {
    this.blob = blob;
  }

  ChangeLog.prototype.parseBody = function(stanza) {
    var bodyRe, matches;
    bodyRe = xre('\\*\\s(?<body>[^\\*-]*)', 'img');
    matches = [];
    xre.forEach(stanza, bodyRe, function(match, i) {
      return matches.push(match.body.trim());
    });
    return matches;
  };

  ChangeLog.prototype.splitLogs = function() {
    var bodyRe, currentIdx, matches;
    bodyRe = xre('[-\+]\\d{4}', 'mg');
    matches = [];
    currentIdx = 0;
    xre.forEach(this.blob, bodyRe, function(match, i) {
      var endIdx;
      endIdx = match.index + 4;
      matches.push(match.input.slice(currentIdx, +endIdx + 1 || 9e9).trim());
      return currentIdx = endIdx + 1;
    });
    return matches;
  };

  ChangeLog.prototype.parse = function(stanza) {
    var entryRe, model;
    entryRe = xre('^(?<pkgname>\\w+)' + '\\s' + '\\(' + '(?<major>\\d+)' + '\\.' + '(?<minor>\\d+)' + '\\.?' + '(?<patchLevel>\\d+)?-' + '(?<versionExtra>\\d+.*)\\)' + '\\s' + '(?<series>\\w+);\\surgency=(?<priority>\\w+)' + '\\s[^]*' + '--\\s(?<firstname>\\w+)' + '\\s' + '(?<lastname>\\w+)' + '\\s' + '(?<email><.*>)' + '\\s+' + '(?<timestamp>.*)', 'img');
    model = xre.exec(stanza, entryRe);
    model.major = parseInt(model.major, 10);
    model.minor = parseInt(model.minor, 10);
    model.patchLevel = parseInt(model.patchLevel, 10) || void 0;
    model.debVersion = model.major + "." + model.minor;
    if (model.patchLevel != null) {
      model.debVersion = model.debVersion + "." + model.patchLevel;
    }
    model.semVer = semver.valid(model.debVersion);
    model.body = this.parseBody(stanza);
    return model;
  };

  return ChangeLog;

})();

module.exports = ChangeLog;
